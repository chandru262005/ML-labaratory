OPERATIONS IN NUMPY

import numpy as np

#1.creating a 1-d array
arr= np.arange(10)
print(arr,end='\n')

#2.Splitting of Array
arr=np.arange(8).reshape((2,4))
print(arr)

#3.Multiplying two matrices
mat1 = np.random.random((2, 3))
mat2 = np.random.random((3, 2))
result = np.dot(mat1, mat2)
print(result)

#4.Extracting odd numbers          
arr = np.arange(1, 11)
bool_arr = arr % 2 != 0
odd_numbers = arr[bool_arr]
print(odd_numbers)

#5.Replace all even numbers in an array of 1-10 with 0.
arr = np.arange(1, 10)
bool_arr = arr % 2 == 0
arr[bool_arr]=0
print(arr)

#6.Convert a 1D array to a boolean array where all positive values become True.
arr = np.array([1,-2,1,-4,2,3])
bool_arr = arr>0
print(bool_arr)

#7.Replace all even numbers in a 1D array with their negative.
arr = np.arange(10)
bool_arr = arr%2==0
arr[bool_arr] = -arr[bool_arr]
print(arr)

#8.Create a random 3x3 matrix and normalize it.
mat=np.random.random((3,3))
nor_mat = (mat-np.mean(mat))/np.std(mat)
print(nor_mat)

#9.Calculate the sum of the diagonal elements of a 3x3 matrix.
mat = np.random.random((3,3))
trace=np.trace(mat)
print(mat)
print(trace)

#10.Find the indices of non-zero elements from [1,2,0,0,4,0].
arr=np.array([1,1,0,10,1,0])
non_zero=np.nonzero(arr)
print(non_zero)

#11.Reverse a 1D array (first element becomes the last).
arr=np.arange(10)
rev=np.flip(arr)
print(rev)

#12.Create a 3x3 identity matrix.
i_mat=np.eye(3)
print(i_mat)

#14.Stack two arrays vertically.
arr1=np.array([1,2,3])
arr2=np.array([5,6,7])
vert = np.vstack((arr1,arr2))
print(vert)

#15.Get the common items between two arrays.
arr1 = np.array([1, 2, 3, 4, 5])
arr2 = np.array([3, 4, 5, 6, 7])
common_items = np.intersect1d(arr1, arr2)
print(common_items)

#16.Create a 5x5 matrix with row values ranging from 0 to 4.
mat=np.zeros((5,5))
mat+=np.arange(1,6)
print(mat)

#17.Find the index of the maximum value in a 1D array.
arr=np.arange(10)
maxi = np.argmax(arr)
print(maxi)

#18.Normalize the values in a 1D array between 0 and 1.
arr = np.array([2,5,12,7,9,10])
norm_arr = (arr - np.min(arr)) / (np.max(arr) - np.min(arr))
print(norm_arr)

#19.Dot product of 2 1-D arrays
arr1 = np.array([1, 2, 3])
arr2 = np.array([4, 5, 6])
dot_product = np.dot(arr1, arr2)
print(dot_product)

#20.Count the number of elements in an array within a specific range.
arr = np.array([2, 5, 8, 10, 12, 15])
count_within_range = np.sum((arr >= 5) & (arr <= 12))
print(count_within_range)

#21.Find the mean of each row in a 2D array.
matrix = np.random.random((3, 4))
row_means = np.mean(matrix, axis=1)   #axis=1 => column_means 
print(row_means)

#22.Create a random 4x4 matrix and extract the diagonal elements.
mat = np.random.random((4,4))
diag = np.diag(mat)
print(diag)

#23.Count the number of occurrences of a specific value in an array.
arr = np.array([1,2,3,4,0,0,2,0])
count_of_2 = np.count_nonzero(arr==1)
print(count_of_2)

#24.Replace all values in a 1D array with the mean of the array.
arr = np.array([10, 20, 30, 40, 50])
arr[:] = np.mean(arr)
print(arr)

#25.Find the indices of the maximum and minimum values in a 1D array.
arr = np.arange(10)
maxi = np.argmin(arr)
mini = np.argmax(arr)
print(maxi)
print(mini)

























